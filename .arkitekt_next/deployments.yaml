deployments:
- build_id: 74c0ec99-d516-46c8-a803-841ab33c8b70
  deployed_at: '2024-10-23T11:13:03.350600'
  deployment_id: 57d65374-f240-47b1-b6a9-9e66bbd61a4c
  deployment_run: 8f817355-77c3-41e7-b848-c16d9c0c83ee
  flavour: vanilla
  image: jhnnsrs/ome:0.0.1-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      livekit:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: io.livekit.livekit
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 2116962747
    templates:
    - definition:
        args:
        - assignWidget:
            kind: SEARCH
            query: "query SearchFiles($search: String, $values: [ID!], $pagination:\
              \ OffsetPaginationInput) {\n  options: files(\n    filters: {search:\
              \ $search, ids: $values}\n    pagination: $pagination\n  ) {\n    value:\
              \ id\n    label: name\n  }\n}"
            ward: mikro
          description: The File to be converted
          identifier: '@mikro/file'
          key: file
          kind: STRUCTURE
          label: file
          nullable: false
          scope: GLOBAL
        - assignWidget:
            kind: SEARCH
            query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
              \ images(\n    filters: {name: {contains: $search}, ids: $values}\n\
              \    pagination: {limit: 10}\n  ) {\n    value: id\n    label: name\n\
              \  }\n}"
            ward: mikro
          description: The Dataset in which to put the Image. Defaults to the file
            dataset.
          identifier: '@mikro/dataset'
          key: dataset
          kind: STRUCTURE
          label: dataset
          nullable: true
          scope: GLOBAL
        - assignWidget:
            kind: SEARCH
            query: "query SearchStages($search: String, $values: [ID!], $pagination:\
              \ OffsetPaginationInput) {\n  options: stages(\n    filters: {search:\
              \ $search, ids: $values}\n    pagination: $pagination\n  ) {\n    value:\
              \ id\n    label: name\n  }\n}"
            ward: mikro
          description: The Stage in which to put the Image. Defaults to None.
          identifier: '@mikro/stage'
          key: stage
          kind: STRUCTURE
          label: stage
          nullable: true
          scope: GLOBAL
        - default: true
          description: Whether to create a position from the first planes (only if
            stage is provided). Defaults to True.
          key: position_from_planes
          kind: BOOL
          label: position_from_planes
          nullable: true
          scope: GLOBAL
        - default: true
          description: Whether to create a timepoint from the first time (only if
            era is provided). Defaults to True.
          key: timepoint_from_time
          kind: BOOL
          label: timepoint_from_time
          nullable: true
          scope: GLOBAL
        - default: true
          description: Whether to create a channel from the channels. Defaults to
            True.
          key: channels_from_channels
          kind: BOOL
          label: channels_from_channels
          nullable: true
          scope: GLOBAL
        - description: The tolerance for the position. Defaults to no tolerance.
          key: position_tolerance
          kind: FLOAT
          label: position_tolerance
          nullable: true
          scope: GLOBAL
        - description: The tolerance for the timepoint. Defaults  to no tolerance.
          key: timepoint_tolerance
          kind: FLOAT
          label: timepoint_tolerance
          nullable: true
          scope: GLOBAL
        collections: []
        description: Converts an Omero File in a set of Mikrodata
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Convert Omero
        portGroups: []
        returns:
        - children:
          - assignWidget:
              kind: SEARCH
              query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
                \ images(\n    filters: {name: {contains: $search}, ids: $values}\n\
                \    pagination: {limit: 10}\n  ) {\n    value: id\n    label: name\n\
                \  }\n}"
              ward: mikro
            identifier: '@mikro/image'
            key: '...'
            kind: STRUCTURE
            nullable: false
            scope: GLOBAL
          description: The created series in this file
          key: return0
          kind: LIST
          nullable: false
          scope: GLOBAL
        stateful: false
      dependencies: []
      dynamic: false
      interface: convert_omero_file
    - definition:
        args:
        - assignWidget:
            kind: SEARCH
            query: "query SearchFiles($search: String, $values: [ID!], $pagination:\
              \ OffsetPaginationInput) {\n  options: files(\n    filters: {search:\
              \ $search, ids: $values}\n    pagination: $pagination\n  ) {\n    value:\
              \ id\n    label: name\n  }\n}"
            ward: mikro
          description: The File to be converted
          identifier: '@mikro/file'
          key: file
          kind: STRUCTURE
          label: file
          nullable: false
          scope: GLOBAL
        - assignWidget:
            kind: SEARCH
            query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
              \ images(\n    filters: {name: {contains: $search}, ids: $values}\n\
              \    pagination: {limit: 10}\n  ) {\n    value: id\n    label: name\n\
              \  }\n}"
            ward: mikro
          description: The dataset that should contain the added images. Defaults
            to None.
          identifier: '@mikro/dataset'
          key: dataset
          kind: STRUCTURE
          label: dataset
          nullable: true
          scope: GLOBAL
        collections: []
        description: Converts an tilffe File in a set of Mikrodata (without metadata)
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Convert Tiff File
        portGroups: []
        returns:
        - children:
          - assignWidget:
              kind: SEARCH
              query: "query SearchImages($search: String, $values: [ID!]) {\n  options:\
                \ images(\n    filters: {name: {contains: $search}, ids: $values}\n\
                \    pagination: {limit: 10}\n  ) {\n    value: id\n    label: name\n\
                \  }\n}"
              ward: mikro
            identifier: '@mikro/image'
            key: '...'
            kind: STRUCTURE
            nullable: false
            scope: GLOBAL
          description: The created series in this file
          key: return0
          kind: LIST
          nullable: false
          scope: GLOBAL
        stateful: false
      dependencies: []
      dynamic: false
      interface: convert_tiff_file
  manifest:
    author: jhnnsrs
    created_at: '2024-10-23T11:12:45.922464'
    entrypoint: app
    identifier: ome
    scopes:
    - read
    version: 0.0.1
  selectors: []
latest_deployment_run: 58b780d3-ff7e-4cff-bdc5-0fcab67d8dd3
